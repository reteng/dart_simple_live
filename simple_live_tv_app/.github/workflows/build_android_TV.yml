# 工作流名称
name: Build Flutter Android APK

# 触发工作流的事件
on:
  # 当有代码推送到 main 分支时触发
  push:
    branches: [ "main" ]
  # 允许手动触发
  workflow_dispatch:

# 定义工作任务
jobs:
  build:
    # 指定运行环境，Android 构建需要 Linux 环境
    runs-on: ubuntu-latest

    # 定义任务步骤
    steps:
      # 1. 检出代码：拉取你的仓库代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. 设置 Java 环境：Android 构建需要 JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. 设置 Flutter 环境：使用社区维护的 Flutter Action
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          # 你可以指定 Flutter 版本，或使用 'stable'
          flutter-version: '3.19.0' 
          # 启用缓存以加快后续构建速度
          cache: true

      # 4. 获取 Flutter 依赖
      - name: Install dependencies
        run: flutter pub get

      # 5. 编译 Debug APK
      - name: Build debug APK
        run: flutter build apk --debug

      # 6. 上传构建产物：将生成的 APK 作为 Artifact 上传
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          # Artifact 的名称
          name: debug-apk
          # 要上传的文件的路径
          path: build/app/outputs/flutter-apk/app-debug.apk
